# This workflow will build and publish the project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Publish

on:
  workflow_dispatch:   # This makes the workflow manual
    inputs:
      version:
        description: 'What is the package version'
        required: true
        default: '1.0.0'

jobs:
  build-and-publish:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Build
      run: dotnet build -c Release Simple.CommandsAndQueries\Simple.CommandsAndQueries.csproj

#    - name: Test net6
#      run: dotnet test Simple.CommandsAndQueries.Tests\Simple.CommandsAndQueries.Tests.csproj -c Release --framework net6.0 -l "console;verbosity=normal" -l "trx;logfilename=TestResults.trx"

#    - name: Test net7
#      run: dotnet test Simple.CommandsAndQueries.Tests\Simple.CommandsAndQueries.Tests.csproj -c Release --framework net7.0 -l "console;verbosity=normal" -l "trx;logfilename=TestResults.trx"
        
    - name: Pack
      run: |
        Write-Host "Hello from PowerShell"
        $version = '${{ github.event.inputs.version }}'
        $project = 'Simple.CommandsAndQueries\Simple.CommandsAndQueries.csproj'
        $description = "`"This is a basic library of interfaces to use for CQRS commands and queries.`""
        $author = "`"Barry Dunne`""
        $year = Get-Date -Format 'yyyy'
        $copyright = "`"Copyright Â© Barry Dunne $year`""
        Write-Host "Packing v$version of $project by $author $copyright description: $description"
        dotnet pack /p:PackageVersion=$version /p:AssemblyVersion=$version /p:FileVersion=$version /p:Authors=$author /p:Copyright=$copyright /p:Description=$description -c Release $project --output "${{env.DOTNET_ROOT}}\Package"

    - name: Publish
      run: dotnet nuget push "${{env.DOTNET_ROOT}}\Package\*.${{ github.event.inputs.version }}.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }}

    - name: Set up git username
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Tag version
      run: |
        git tag ${{ github.event.inputs.version }}
        git push origin ${{ github.event.inputs.version }}